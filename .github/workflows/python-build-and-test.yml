name: Python package builds and tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.13" ]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: ./chatgpt_proxy/uv.lock

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        working-directory: ./chatgpt_proxy
        run: |
          uv sync --locked --all-extras --dev

      - name: Build project
        working-directory: ./chatgpt_proxy
        run: |
          uv build

      - name: Run mypy
        working-directory: ./chatgpt_proxy
        continue-on-error: true
        run: |
          uv run mypy . --output=json | jq -r '"::error title=Mypy issue,file=\(.file),line=\(.line),col=\(.column)::\(.message)"'

      - name: Run Ruff
        uses: astral-sh/ruff-action@v3
        continue-on-error: true
        with:
          src: ./chatgpt_proxy

      - name: Run pytest
        working-directory: ./chatgpt_proxy
        run: |
          uv run pytest

      - name: Minimize uv cache
        working-directory: ./chatgpt_proxy
        run: uv cache prune --ci
